##########################################
# 2 pointers: fast and slow;
# pay attention to when slow increment
##########################################
class Solution:
    """
    @param: nums: An ineger array
    @return: An integer
    """
    def removeDuplicates(self, nums):
        # write your code here
        """
        if not nums:
            return 0
        idx = 0
        for i in range(1, len(nums)):
            if not nums[i] == nums[idx]:
                idx += 1
                nums[idx] = nums[i]
            print 'slow: ', idx
            print 'fast: ', i
        return idx + 1
        """
        if not nums:
            return 0
        slow = 0
        fast = 1
        while fast < len(nums):
            if nums[slow] == nums[fast]:
                fast += 1
            else:
                slow += 1
                nums[slow] = nums[fast]
        return slow + 1
